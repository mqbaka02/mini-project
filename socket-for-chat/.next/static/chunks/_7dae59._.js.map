{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/next-exercise-socket-chat-stuff/socket-for-chat/app/register/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { ChangeEvent, FormEvent, useState } from \"react\";\r\n\r\nexport const BASE_API_URL= process.env.NEXT_PUBLIC_BASE_API_URL;\r\n\r\nexport default function Page() {\r\n\r\n    const [inputState, setInputState]= useState<Record<string, any>>({username: \"\", pass: \"\", repass: \"\"});\r\n    const [error, setError]= useState({hasErrors: false, message: \"\"});\r\n    const history= useRouter();\r\n\r\n    const handleInputsChange= (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setInputState({...inputState, [event.currentTarget.name] : event.currentTarget.value});\r\n        setError({hasErrors: false, message: \"\"});\r\n    };\r\n\r\n    const formSubmit= (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (inputState.username.trim()=== \"\") {\r\n            setError({\r\n                hasErrors: true,\r\n                message: \"Please enter a correct user name\"\r\n            });\r\n            return;\r\n        }\r\n        if (inputState.pass=== \"\" || (inputState.pass !== inputState.repass)) {\r\n            if (inputState.pass=== \"\") {\r\n                setError({\r\n                    hasErrors: true,\r\n                    message: \"Password field should not be empty\"\r\n                });\r\n            } else {\r\n                setError({\r\n                    hasErrors: true,\r\n                    message: \"Passwords do not match\"\r\n                });\r\n            }\r\n            return;\r\n        }\r\n        console.log(inputState);\r\n\r\n        const responseBody= {\r\n            username: inputState.username,\r\n            password: inputState.pass\r\n        };\r\n        try {\r\n            fetch( BASE_API_URL + '/user/create', {\r\n                method: 'POST',\r\n                headers: {'Content-type': 'application/json'},\r\n                body: JSON.stringify(responseBody)\r\n            }).then(response=> {\r\n                console.log(response);\r\n                return response.json();\r\n            }).then(data=> {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    setError({\r\n                        hasErrors: true,\r\n                        message: \"The user name you chose is already taken. Use another name.\"\r\n                    });\r\n                    return;\r\n                }\r\n                if (data.status=== \"success\") {\r\n                    console.log(\"UserCreation successful\");\r\n                    history.push('/success');\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <div className=\"flex flex-col gap-8\">\r\n            <h1 className=\"text-xl text-center\">Create your account</h1>\r\n            <form onSubmit={formSubmit} className=\"flex flex-col gap-2 my-2\">\r\n                <input type=\"text\" name=\"username\" id=\"username\" onChange={handleInputsChange} value={inputState.username} placeholder=\"Your user name\" />\r\n                <input type=\"password\" name=\"pass\" id=\"pass\" onChange={handleInputsChange} value={inputState.pass} placeholder=\"Your password\" />\r\n                <input type=\"password\" name=\"repass\" id=\"repass\" onChange={handleInputsChange} value={inputState.repass} placeholder=\"Confirm your password\" />\r\n                {error.hasErrors && <p className=\"text-[#f00]\">{error.message}</p>}\r\n                <input type=\"submit\" className=\"px-4 py-1 bg-[#333] text-white hover:bg-[#55f] cursor-pointer\" value={\"Create an account\"} />\r\n            </form>\r\n        </div>\r\n    </>;\r\n}"],"names":[],"mappings":";;;;;AACA;AACA;AAE2B;;;AAJ3B;;;AAIO,MAAM;AAEE,SAAS;;IAEpB,MAAM,CAAC,YAAY,cAAc,GAAE,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAuB;QAAC,UAAU;QAAI,MAAM;QAAI,QAAQ;IAAE;IACpG,MAAM,CAAC,OAAO,SAAS,GAAE,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;QAAC,WAAW;QAAO,SAAS;IAAE;IAChE,MAAM,UAAS,CAAA,GAAA,oQAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,qBAAoB,CAAC;QACvB,cAAc;YAAC,GAAG,UAAU;YAAE,CAAC,MAAM,aAAa,CAAC,IAAI,CAAC,EAAG,MAAM,aAAa,CAAC,KAAK;QAAA;QACpF,SAAS;YAAC,WAAW;YAAO,SAAS;QAAE;IAC3C;IAEA,MAAM,aAAY,CAAC;QACf,MAAM,cAAc;QACpB,IAAI,WAAW,QAAQ,CAAC,IAAI,OAAM,IAAI;YAClC,SAAS;gBACL,WAAW;gBACX,SAAS;YACb;YACA;QACJ;QACA,IAAI,WAAW,IAAI,KAAI,MAAO,WAAW,IAAI,KAAK,WAAW,MAAM,EAAG;YAClE,IAAI,WAAW,IAAI,KAAI,IAAI;gBACvB,SAAS;oBACL,WAAW;oBACX,SAAS;gBACb;YACJ,OAAO;gBACH,SAAS;oBACL,WAAW;oBACX,SAAS;gBACb;YACJ;YACA;QACJ;QACA,QAAQ,GAAG,CAAC;QAEZ,MAAM,eAAc;YAChB,UAAU,WAAW,QAAQ;YAC7B,UAAU,WAAW,IAAI;QAC7B;QACA,IAAI;YACA,MAAO,eAAe,gBAAgB;gBAClC,QAAQ;gBACR,SAAS;oBAAC,gBAAgB;gBAAkB;gBAC5C,MAAM,KAAK,SAAS,CAAC;YACzB,GAAG,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,OAAO,SAAS,IAAI;YACxB,GAAG,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,IAAI,KAAK,KAAK,EAAE;oBACZ,SAAS;wBACL,WAAW;wBACX,SAAS;oBACb;oBACA;gBACJ;gBACA,IAAI,KAAK,MAAM,KAAI,WAAW;oBAC1B,QAAQ,GAAG,CAAC;oBACZ,QAAQ,IAAI,CAAC;gBACjB;YACJ;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;QAChB;IACJ;IAEA,qBAAO;kBACH,cAAA,4TAAC;YAAI,WAAU;;8BACX,4TAAC;oBAAG,WAAU;8BAAsB;;;;;;8BACpC,4TAAC;oBAAK,UAAU;oBAAY,WAAU;;sCAClC,4TAAC;4BAAM,MAAK;4BAAO,MAAK;4BAAW,IAAG;4BAAW,UAAU;4BAAoB,OAAO,WAAW,QAAQ;4BAAE,aAAY;;;;;;sCACvH,4TAAC;4BAAM,MAAK;4BAAW,MAAK;4BAAO,IAAG;4BAAO,UAAU;4BAAoB,OAAO,WAAW,IAAI;4BAAE,aAAY;;;;;;sCAC/G,4TAAC;4BAAM,MAAK;4BAAW,MAAK;4BAAS,IAAG;4BAAS,UAAU;4BAAoB,OAAO,WAAW,MAAM;4BAAE,aAAY;;;;;;wBACpH,MAAM,SAAS,kBAAI,4TAAC;4BAAE,WAAU;sCAAe,MAAM,OAAO;;;;;;sCAC7D,4TAAC;4BAAM,MAAK;4BAAS,WAAU;4BAAgE,OAAO;;;;;;;;;;;;;;;;;;;AAItH;GA/EwB;;QAIL,oQAAA,CAAA,YAAS;;;KAJJ"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/next-exercise-socket-chat-stuff/socket-for-chat/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { BASE_API_URL } from \"../register/page\";\r\n\r\nexport default function Page() {\r\n\r\n    const [inputState, setInputState]= useState<Record<string, any>>({username: \"\", pass: \"\"});\r\n    const [error, setError]= useState({hasErrors: false, message: \"\"});\r\n\r\n    const handleInputsChange= (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setInputState({...inputState, [event.currentTarget.name] : event.currentTarget.value});\r\n        setError({hasErrors: false, message: \"\"});\r\n    };\r\n\r\n    const formSubmit= (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (inputState.username.trim()=== \"\") {\r\n            setError({\r\n                hasErrors: true,\r\n                message: \"Please enter a correct user name\"\r\n            });\r\n            return;\r\n        }\r\n        if (inputState.pass=== \"\") {\r\n            setError({\r\n                hasErrors: true,\r\n                message: \"Password field should not be empty\"\r\n            });\r\n            return;\r\n        }\r\n        console.log(inputState);\r\n\r\n        const responseBody= {\r\n            username: inputState.username,\r\n            password: inputState.pass\r\n        };\r\n        try {\r\n            fetch( BASE_API_URL + '/login', {\r\n                method: 'POST',\r\n                headers: {'Content-type': 'application/json'},\r\n                body: JSON.stringify(responseBody)\r\n            }).then(response=> {\r\n                console.log(response);\r\n                return response.json();\r\n            }).then(data=> {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    setError({\r\n                        hasErrors: true,\r\n                        message: \"Invalid creadentials\"\r\n                    });\r\n                    return;\r\n                }\r\n                if (data.success) {\r\n                    console.log(\"Login successful\");\r\n                    localStorage.setItem(\"accessToken\", data.data.accessToken);\r\n                    localStorage.setItem(\"refreshToken\", data.data.refreshToken);\r\n                    // history.push('/success');\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <div className=\"flex flex-col gap-8\">\r\n            <h1 className=\"text-xl text-center\">Log in into your account</h1>\r\n            <form onSubmit={formSubmit} className=\"flex flex-col gap-2 my-2\">\r\n                <input type=\"text\" name=\"username\" id=\"username\" onChange={handleInputsChange} value={inputState.username} placeholder=\"User name\" />\r\n                <input type=\"password\" name=\"pass\" id=\"pass\" onChange={handleInputsChange} value={inputState.pass} placeholder=\"User password\" />\r\n                {error.hasErrors && <p className=\"text-[#f00]\">{error.message}</p>}\r\n                <input type=\"submit\" className=\"px-4 py-1 bg-[#333] text-white hover:bg-[#55f] cursor-pointer\" value={\"Log in\"} />\r\n            </form>\r\n        </div>\r\n    </>;\r\n}"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IAEpB,MAAM,CAAC,YAAY,cAAc,GAAE,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAuB;QAAC,UAAU;QAAI,MAAM;IAAE;IACxF,MAAM,CAAC,OAAO,SAAS,GAAE,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;QAAC,WAAW;QAAO,SAAS;IAAE;IAEhE,MAAM,qBAAoB,CAAC;QACvB,cAAc;YAAC,GAAG,UAAU;YAAE,CAAC,MAAM,aAAa,CAAC,IAAI,CAAC,EAAG,MAAM,aAAa,CAAC,KAAK;QAAA;QACpF,SAAS;YAAC,WAAW;YAAO,SAAS;QAAE;IAC3C;IAEA,MAAM,aAAY,CAAC;QACf,MAAM,cAAc;QACpB,IAAI,WAAW,QAAQ,CAAC,IAAI,OAAM,IAAI;YAClC,SAAS;gBACL,WAAW;gBACX,SAAS;YACb;YACA;QACJ;QACA,IAAI,WAAW,IAAI,KAAI,IAAI;YACvB,SAAS;gBACL,WAAW;gBACX,SAAS;YACb;YACA;QACJ;QACA,QAAQ,GAAG,CAAC;QAEZ,MAAM,eAAc;YAChB,UAAU,WAAW,QAAQ;YAC7B,UAAU,WAAW,IAAI;QAC7B;QACA,IAAI;YACA,MAAO,2HAAA,CAAA,eAAY,GAAG,UAAU;gBAC5B,QAAQ;gBACR,SAAS;oBAAC,gBAAgB;gBAAkB;gBAC5C,MAAM,KAAK,SAAS,CAAC;YACzB,GAAG,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,OAAO,SAAS,IAAI;YACxB,GAAG,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,IAAI,KAAK,KAAK,EAAE;oBACZ,SAAS;wBACL,WAAW;wBACX,SAAS;oBACb;oBACA;gBACJ;gBACA,IAAI,KAAK,OAAO,EAAE;oBACd,QAAQ,GAAG,CAAC;oBACZ,aAAa,OAAO,CAAC,eAAe,KAAK,IAAI,CAAC,WAAW;oBACzD,aAAa,OAAO,CAAC,gBAAgB,KAAK,IAAI,CAAC,YAAY;gBAC3D,4BAA4B;gBAChC;YACJ;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;QAChB;IACJ;IAEA,qBAAO;kBACH,cAAA,4TAAC;YAAI,WAAU;;8BACX,4TAAC;oBAAG,WAAU;8BAAsB;;;;;;8BACpC,4TAAC;oBAAK,UAAU;oBAAY,WAAU;;sCAClC,4TAAC;4BAAM,MAAK;4BAAO,MAAK;4BAAW,IAAG;4BAAW,UAAU;4BAAoB,OAAO,WAAW,QAAQ;4BAAE,aAAY;;;;;;sCACvH,4TAAC;4BAAM,MAAK;4BAAW,MAAK;4BAAO,IAAG;4BAAO,UAAU;4BAAoB,OAAO,WAAW,IAAI;4BAAE,aAAY;;;;;;wBAC9G,MAAM,SAAS,kBAAI,4TAAC;4BAAE,WAAU;sCAAe,MAAM,OAAO;;;;;;sCAC7D,4TAAC;4BAAM,MAAK;4BAAS,WAAU;4BAAgE,OAAO;;;;;;;;;;;;;;;;;;;AAItH;GAxEwB;KAAA"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/next-exercise-socket-chat-stuff/socket-for-chat/node_modules/.pnpm/next%4015.1.6_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}