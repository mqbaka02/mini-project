{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/next-exercise-socket-chat-stuff/socket-for-chat/app/profile/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { checkToken, isThereAnyToken } from \"../services/utils\";\r\nimport { BASE_API_URL } from \"../register/page\";\r\n\r\nexport default function Page() {\r\n    const history= useRouter();\r\n    const [profileData, setProfileData]= useState<any>({});\r\n    const [profileFormData, setProfileFormData]= useState<any>({});\r\n\r\n    const [isEditing, setIsEditing]= useState<boolean>(false);\r\n\r\n    useEffect(()=> {\r\n        if (!isThereAnyToken(localStorage)) {\r\n            history.push('/login');\r\n        } else {\r\n            checkToken(localStorage.getItem('refreshToken')).then(answer => {\r\n                if (!answer) {\r\n                    localStorage.removeItem('accessToken');\r\n                    localStorage.removeItem('refreshToken');\r\n                    history.push('/');\r\n                }\r\n            });\r\n        }\r\n\r\n        const id= JSON.parse(localStorage.getItem('data') || \"{}\")?.id\r\n        const getProfileInfo = () => {\r\n            fetch(BASE_API_URL + '/profile-info', {\r\n                method: 'POST',\r\n                headers: { 'Content-type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') + ' ' + localStorage.getItem('refreshToken') },\r\n                body: JSON.stringify({\r\n                    id: id\r\n                })\r\n            }).then(response => response.json()).then(\r\n                data => {\r\n                    console.log(data);\r\n                    if (data.data) {\r\n                        setProfileData(data.data);\r\n                    } else if (data.error === \"accessToken\") {\r\n                        fetch(BASE_API_URL + '/refresh', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-type': 'application/json' },\r\n                            body: JSON.stringify({\r\n                                refreshToken: localStorage.getItem('refreshToken')\r\n                            })\r\n                        }).then(response => response.json()).then(data => {\r\n                            console.log(data);\r\n                            if (data.success) {\r\n                                localStorage.setItem('refreshToken', data.refreshToken);\r\n                                localStorage.setItem('accessToken', data.accessToken);\r\n                                getProfileInfo();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        getProfileInfo();\r\n    }, [isEditing]);\r\n\r\n    useEffect(()=> {\r\n        setProfileFormData(profileData);\r\n    }, [profileData]);\r\n\r\n    const handleInputs= (event: any) => {\r\n        event.preventDefault();\r\n        setProfileFormData({...profileFormData, [event.currentTarget.name]: event.currentTarget.value=== \"\" ? null : event.currentTarget.value });\r\n    };\r\n\r\n    const submitForm= (event: any) => {\r\n        event.preventDefault();\r\n        console.log(profileFormData);\r\n        const reqBody= {\r\n            id: profileFormData.userID,\r\n            name: profileFormData.name,\r\n            firstname: profileFormData.firstname,\r\n            age: profileFormData.age\r\n        };\r\n        const sendInfo= () => {\r\n            fetch(BASE_API_URL + '/update-info', {\r\n                method: 'POST',\r\n                headers: { 'Content-type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('accessToken') + ' ' + localStorage.getItem('refreshToken') },\r\n                body: JSON.stringify(reqBody)\r\n            }).then(response => response.json()).then(\r\n                data => {\r\n                    console.log(data);\r\n                    if (data.success) {\r\n                        console.log(\"Operation successful\");\r\n                        setIsEditing(false);\r\n                    } else if (data.error === \"accessToken\") {\r\n                        fetch(BASE_API_URL + '/refresh', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-type': 'application/json' },\r\n                            body: JSON.stringify({\r\n                                refreshToken: localStorage.getItem('refreshToken')\r\n                            })\r\n                        }).then(response => response.json()).then(data => {\r\n                            console.log(data);\r\n                            if (data.success) {\r\n                                localStorage.setItem('refreshToken', data.refreshToken);\r\n                                localStorage.setItem('accessToken', data.accessToken);\r\n                                sendInfo();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n        };\r\n        sendInfo();\r\n    };\r\n\r\n    return<>\r\n    <div className=\"flex flex-col gap-4 items-center justify-center\">\r\n        <h1 className=\"text-xl text-center\">Your profile</h1>\r\n        {\r\n            !isEditing ?\r\n            <>\r\n                <div className=\"grid grid-cols-2 gap-y-2 gap-x-6\">\r\n                    <div className=\"font-semibold\">ID</div>\r\n                    <div className=\"text-right\">{profileData.userID}</div>\r\n\r\n                    <div className=\"font-semibold\">Profile ID</div>\r\n                    <div className=\"text-right\">{profileData.profileID}</div>\r\n\r\n                    <div className=\"font-semibold\">First name</div>\r\n                    <div className=\"text-right\">{profileData.firstname || \"--\"}</div>\r\n\r\n                    <div className=\"font-semibold\">Name</div>\r\n                    <div className=\"text-right\">{profileData.name || \"--\"}</div>\r\n\r\n                    <div className=\"font-semibold\">Age</div>\r\n                    <div className=\"text-right\">{profileData.age || \"--\"}</div>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                    <button className=\"px-4 py-1 bg-[#333] text-white hover:bg-[#55f] cursor-pointer\" onClick={()=>setIsEditing(true)}>Edit</button>\r\n                </div>\r\n            </>\r\n            :\r\n            <>\r\n                <form onSubmit={submitForm}>\r\n                    <div className=\"grid grid-cols-2 gap-y-2 gap-x-6\">\r\n                        <div className=\"font-semibold\">First name</div>\r\n                        <input type=\"text\" className=\"\" value={profileFormData.firstname || \"\"} onChange={handleInputs} name=\"firstname\" id=\"firstname\" />\r\n\r\n                        <div className=\"font-semibold\">Name</div>\r\n                        <input type=\"text\" className=\"\" value={profileFormData.name || \"\"} onChange={handleInputs} name=\"name\" id=\"name\" />\r\n\r\n                        <div className=\"font-semibold\">Age</div>\r\n                        <input type=\"text\" className=\"\" value={profileFormData.age || \"\"} onChange={handleInputs} name=\"age\" id=\"age\" />\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                        <input type=\"submit\" className=\"px-4 py-1 bg-[#333] text-white hover:bg-[#55f] cursor-pointer\" value={\"Save\"} />\r\n                        <button className=\"px-4 py-1 bg-[#333] text-white hover:bg-[#f55] cursor-pointer\" onClick={(e) => { e.preventDefault(); setIsEditing(false) }}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        }\r\n    </div>\r\n    </>\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}